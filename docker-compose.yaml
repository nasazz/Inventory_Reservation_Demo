services:
  sqlserver:
    container_name: inventory_reservation_demo-sqlserver
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Password123!"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - inventory_network
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "Password123!", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  backend:
    container_name: inventory_reservation_demo-backend
    build:
      context: ./src
      dockerfile: Api/Dockerfile
    ports:
      - "5211:80"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ConnectionStrings__DefaultConnection: "Server=sqlserver;Database=InventoryDb;User=sa;Password=Password123!;TrustServerCertificate=true;"
    networks:
      - inventory_network
    depends_on:
      sqlserver:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s 

  migrate:
    image: mcr.microsoft.com/dotnet/sdk:9.0
    volumes:
      - ./src:/app
    working_dir: /app
    environment:
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=InventoryDb;User=sa;Password=Password123!;TrustServerCertificate=true;
    entrypoint: >
      bash -c "
        # Install EF tool and add to PATH
        export PATH=\"$$PATH:/root/.dotnet/tools\"
        dotnet tool install --global dotnet-ef --version 9.0.0
        
        # Wait for SQL Server to be ready
        for i in {1..30}; do
          echo \"Attempt $$i to run EF migrations...\";
          dotnet ef database update --project Infrastructure/Infrastructure.csproj --startup-project Api/Api.csproj && exit 0;
          echo 'Waiting for SQL Server to become available...';
          sleep 2;
        done;
        echo 'Migration failed after retries' >&2;
        exit 1
      "
    networks:
      - inventory_network
    depends_on:
      sqlserver:
        condition: service_healthy

  frontend:
    container_name: inventory_reservation_demo-frontend
    build:
      context: ./frontend/angular-app
      dockerfile: ../docker/prod/Dockerfile.prod
    ports:
      - "8080:80"
    networks:
      - inventory_network
    depends_on:
      backend:
        condition: service_healthy

networks:
  inventory_network:
    driver: bridge

volumes:
  sqlserver_data: